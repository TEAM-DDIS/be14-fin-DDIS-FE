name: Deploy to AWS Elastic Beanstalk

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize

  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Clean node_modules and lockfile
      run: |
        rm -rf node_modules package-lock.json

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Generate deployment package
      run: |
        mkdir -p deploy
        cp -r dist deploy/
        cp package.json deploy/
        cp server.js deploy/ 
        cp Procfile deploy/Procfile
        cd deploy && zip -r deploy.zip .

    - name: Get current time
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYYMMDD-HHmmss
        utcOffset: "+09:00"

    - name: Beanstalk Deploy
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ddis-f-v3
        environment_name: Ddis-f-v3-env
        version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
        region: ap-northeast-2
        deployment_package: deploy/deploy.zip
        use_existing_version_if_available: false
        wait_for_deployment: true
        wait_for_environment_recovery: 300

    - name: Upload deploy.zip artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: deploy-package
        path: deploy/deploy.zip